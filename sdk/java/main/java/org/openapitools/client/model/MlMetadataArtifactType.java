/*
 * api/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.MlMetadataPropertyType;

/**
 * MlMetadataArtifactType
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-11-29T15:59:29.714+09:00[Asia/Tokyo]")
public class MlMetadataArtifactType {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private Map<String, MlMetadataPropertyType> properties = new HashMap<String, MlMetadataPropertyType>();

  public MlMetadataArtifactType id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the type. 1-1 relationship between type names and IDs.
   * @return id
  **/
  @ApiModelProperty(value = "The id of the type. 1-1 relationship between type names and IDs.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public MlMetadataArtifactType name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the type. It must be unique among ArtifactTypes within a database instance.
   * @return name
  **/
  @ApiModelProperty(value = "The name of the type. It must be unique among ArtifactTypes within a database instance.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public MlMetadataArtifactType properties(Map<String, MlMetadataPropertyType> properties) {
    this.properties = properties;
    return this;
  }

  public MlMetadataArtifactType putPropertiesItem(String key, MlMetadataPropertyType propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, MlMetadataPropertyType>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * The schema of the type. Properties are always optional in the artifact. Properties of an artifact type can be expanded but not contracted (i.e., you can add columns but not remove them).
   * @return properties
  **/
  @ApiModelProperty(value = "The schema of the type. Properties are always optional in the artifact. Properties of an artifact type can be expanded but not contracted (i.e., you can add columns but not remove them).")
  public Map<String, MlMetadataPropertyType> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, MlMetadataPropertyType> properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MlMetadataArtifactType mlMetadataArtifactType = (MlMetadataArtifactType) o;
    return Objects.equals(this.id, mlMetadataArtifactType.id) &&
        Objects.equals(this.name, mlMetadataArtifactType.name) &&
        Objects.equals(this.properties, mlMetadataArtifactType.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, properties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MlMetadataArtifactType {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

