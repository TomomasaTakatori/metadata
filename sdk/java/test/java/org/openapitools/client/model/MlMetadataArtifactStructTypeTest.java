/*
 * api/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.MlMetadataArtifactType;
import org.openapitools.client.model.MlMetadataDictArtifactStructType;
import org.openapitools.client.model.MlMetadataIntersectionArtifactStructType;
import org.openapitools.client.model.MlMetadataListArtifactStructType;
import org.openapitools.client.model.MlMetadataTupleArtifactStructType;
import org.openapitools.client.model.MlMetadataUnionArtifactStructType;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for MlMetadataArtifactStructType
 */
public class MlMetadataArtifactStructTypeTest {
    private final MlMetadataArtifactStructType model = new MlMetadataArtifactStructType();

    /**
     * Model tests for MlMetadataArtifactStructType
     */
    @Test
    public void testMlMetadataArtifactStructType() {
        // TODO: test MlMetadataArtifactStructType
    }

    /**
     * Test the property 'simple'
     */
    @Test
    public void simpleTest() {
        // TODO: test simple
    }

    /**
     * Test the property 'unionType'
     */
    @Test
    public void unionTypeTest() {
        // TODO: test unionType
    }

    /**
     * Test the property 'intersection'
     */
    @Test
    public void intersectionTest() {
        // TODO: test intersection
    }

    /**
     * Test the property 'list'
     */
    @Test
    public void listTest() {
        // TODO: test list
    }

    /**
     * Test the property 'none'
     */
    @Test
    public void noneTest() {
        // TODO: test none
    }

    /**
     * Test the property 'any'
     */
    @Test
    public void anyTest() {
        // TODO: test any
    }

    /**
     * Test the property 'tuple'
     */
    @Test
    public void tupleTest() {
        // TODO: test tuple
    }

    /**
     * Test the property 'dict'
     */
    @Test
    public void dictTest() {
        // TODO: test dict
    }

}
